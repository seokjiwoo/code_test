.radioWrap{
  $clrs-lineBg : getColors( 'line-bg' ) ; 
  $clrs-primary : getColors( 'primary' ) ; 
  $clrs-text : getColors( 'text' ) ; 
  position:relative ; 
  display: inline-flex ; 
  align-items: center ;   
  user-select: none;
  cursor: pointer;
  @include getTypoStyles( body-13 ) ;
  input {
    position: absolute;
    left: 0; top: 0; opacity: 0;
    visibility: hidden;
    &:disabled {
      & ~ i { background-color: nth( $clrs-lineBg , 7 ) ; }
      & ~ span { color: nth( $clrs-text, 4 ) ; }
      &:checked ~ i {
        border:1px solid nth( $clrs-lineBg , 4 ) ; 
        background-color: nth( $clrs-lineBg , 4 );
        &::after{
          width:8px; height:8px ; 
          background-color: #fff;
          border:none ;
          box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.1);
        }
      }
      &:checked ~ span { color: nth( $clrs-text, 4 ) ; }
    }
    &:checked {
      & ~ i {
        border:none ; 
        &::after { display: inline-flex; }
      }
      & ~ span { color:nth( $clrs-primary , 1 ) ; }
    }
  }
  i {
    position:relative ; 
    display:inline-flex ;
    width:20px; height:20px; 
    border:1px solid nth( $clrs-lineBg , 3 ) ; 
    border-radius: 50% ;
    &::after {
      content:"" ; 
      display: none ;
      width:100% ; height: 100% ; 
      position: absolute; 
      left: 50% ; top:50% ; 
      transform:translate( -50%, -50% ) ; 
      border:6px solid nth( $clrs-primary , 1 ) ; 
      border-radius: 50%;
    }
  }
  span { color: nth( $clrs-text, 1 ) ; margin-left: 12px ;  }
  &:hover {
    input:not(:disabled) ~ i { border-color:nth( $clrs-primary , 1 ) ; }
    input:not(:disabled):checked ~ i::after { border-color: #e36f2d ; }
  }
}
